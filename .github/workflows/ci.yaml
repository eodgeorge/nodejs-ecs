name: "c-integration"

on:
  workflow_run:
    workflows: [ "Code-analysis" ] 
    types:
      - completed
  workflow_dispatch:      

jobs:
  build_docker:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install npm dependencies
        run:  npm install && npm run build
        working-directory: app-code

      - name: Upload-build
        uses: actions/upload-artifact@v3
        with:
          name: artfT
          path: app-code/srsbuild

      - name: Download-build
        uses: actions/download-artifact@v3
        with:
          name: artfT
          path: app-code/srsbuild

      - name: Docker Log-in
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Image-buildTAg
        run:  |
          echo "IMAGe_TAG=${IMAGE_TAG}-$(date +%Y%m%d%H%M%S)" > image_tag.txt 
          docker build -t ${{ secrets.DOCKER_USERNAME }}/swsnodejs:${{ IMAGe_TAG }} -f app-code/Dockerfile .

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/swsnodejs:${{ IMAGe_TAG }}'
          format: 'table'
          exit-code: 1 
          severity: 'HIGH,CRITICAL'

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/swsnodejs:${{ env.IMAGE_TAG }}

      - name: Upload IMAGE_TAG_artifact
        uses: actions/upload-artifact@v3
        with:
          name: image_tag
          path: image_tag.txt

    outputs:
      image_tag: ${{ steps.docker_image_build.outputs.image_tag }}



